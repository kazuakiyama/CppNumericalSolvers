// -*-c++-*-
// This file is part of Eigen, a lightweight C++ template library
// for linear algebra.
//
// Copyright (C) 2015 Michael Tesch tesch a tum de
//
// This Source Code Form is subject to the terms of the Mozilla
// Public License v. 2.0. If a copy of the MPL was not distributed
// with this file, You can obtain one at http://mozilla.org/MPL/2.0/.
//
#ifndef EIGEN_DUALNUM_MODULE
#define EIGEN_DUALNUM_MODULE

namespace Eigen {

/**
  * \defgroup DualNum_Module Dual/HyperDual Numbers module
  *
  * \code
  * #include <unsupported/Eigen/DualNum>
  * \endcode
  *
  * This module provides Dual numbers and Hyper-Dual numbers
  *
  * This implementation is based on code from Jeffrey Fike here: http://adl.stanford.edu/hyperdual/
  *
  * \section DualDesign Design
  *
  * The intent is to facilitate first and second-order automatic differentiation.
  * The intent is to provide support for the following types of Matrix elements in Eigen:
  *
  * \code
  *  DualNum<float>
  *  DualNum<double>
  *  DualNum<std::complex<float> >
  *  DualNum<std::complex<double> >
  *  HyperDual<float>
  *  HyperDual<double>
  *  HyperDual<std::complex<float> >
  *  HyperDual<std::complex<double> >
  * \endcode
  *
  */
//@{

}

#include "src/DualNum/DualNum.h"

namespace Eigen {

typedef DualNum<float> Dualf;
typedef DualNum<double> Duald;
typedef DualNum<long double> Dualld;
typedef DualNum<std::complex<float> > Dualcf;
typedef DualNum<std::complex<double> > Dualcd;
typedef DualNum<std::complex<long double> > Dualcld;

//@}
}


#endif // EIGEN_DUALNUM_MODULE
